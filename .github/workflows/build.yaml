name: Build NPM Package
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
permissions:
  checks: write
  contents: read
  packages: read
jobs:
  create_scan_in_IR_Portal:
    runs-on: ubuntu-latest
    outputs:
      scan_id: ${{ steps.ir-scan.outputs.scan_id }}
      username: ${{ steps.ir-scan.outputs.username }}
      password: ${{ steps.ir-scan.outputs.password }}
    steps:
      - uses: ashrayat9/ir-action@v0.0.19
        id: ir-scan
        with:
          VB_API_URL: 'https://app.dev.invisirisk.com'
          VB_API_KEY: ${{ secrets.VB_API_KEY }}
          
  start_proxy_and_build:
    runs-on: ubuntu-latest
    needs: [create_scan_in_IR_Portal]
    services:
      pse:
        image: 282904853176.dkr.ecr.us-west-2.amazonaws.com/invisirisk/pse-proxy:latest
        credentials:
          username: ${{needs.create_scan_in_IR_Portal.outputs.username}}
          password: ${{needs.create_scan_in_IR_Portal.outputs.password}}
        env:
          PSE_DEBUG_FLAG: --alsologtostderr
          POLICY_LOG: t
          INVISIRISK_JWT_TOKEN: ${{secrets.VB_API_KEY}} 
          INVISIRISK_PORTAL: https://app.dev.invisirisk.com/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    container:
      image: node:18-alpine
      options: --cap-add=NET_ADMIN
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - env: 
        SCAN_ID: ${{ needs.create_scan_in_IR_Portal.outputs.scan_id }}
      run: echo $SCAN_ID
    - uses: invisirisk/pse-action@v1.0.7
      with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          SCAN_ID: ${{ needs.create_scan_in_IR_Portal.outputs.scan_id }}
    - name: Checkout the code
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: npm run build --if-present




    
    
